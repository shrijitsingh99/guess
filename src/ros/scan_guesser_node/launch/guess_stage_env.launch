<launch>
  <arg name="map_name" default="$(find stage_ros)/world/willow-full.yaml"/>
  <arg name="worldfile" default="$(find stage_ros)/world/willow-erratic.world"/>
  <arg name="rviz_cfg" default="$(find scan_guesser_node)/single_robot.rviz"/>
  <arg name="initial_pose_x" default="1.5"/>
  <arg name="initial_pose_y" default="2.0"/>
  <arg name="initial_pose_z" default="0.2"/>
  <arg name="initial_pose_yaw" default="0.0"/>

  <arg name="odom_frame_id"   default="odom"/> <!-- Unused -->
  <arg name="global_frame_id" default="map"/>
  <arg name="scan_topic" default="scan"/>
  <arg name="cmd_vel_topic" default="cmd_vel"/> <!-- Unused -->

  <param name="/use_sim_time" value="true"/>

  <!-- Simulation -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find guess_simulation)/worlds/$(arg map_name).world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="false"/>
    <arg name="headless" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="false" />
  </include>

  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="x" value="$(arg initial_pose_x)"/>
    <arg name="y" value="$(arg initial_pose_y)"/>
    <arg name="z" value="$(arg initial_pose_z)"/>
    <arg name="yaw" value="$(arg initial_pose_yaw)"/>
    <arg name="urdf_extras" value="$(find guess_simulation)/urdf/husky/sensors.urdf.xacro"/>
  </include>

  <!-- Navigation -->
  <arg name="no_static_map" default="false"/>
  <arg name="base_global_planner" default="navfn/NavfnROS"/>
  <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find scan_guesser_node)/config/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find scan_guesser_node)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find scan_guesser_node)/config/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find scan_guesser_node)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="10.0"/>
    <param name="local_costmap/height" value="10.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find scan_guesser_node)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find scan_guesser_node)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
  </node>

  <node pkg="map_server" name="map_server" type="map_server" args="$(find guess_simulation)/maps/$(arg map_name).yaml">
    <param name="frame_id" value="$(arg global_frame_id)"/>
  </node>

  <!-- Localization -->
  <node pkg="amcl" type="amcl" name="amcl">
    <remap from="scan" to="$(arg scan_topic)"/>
    <param name="use_map_topic" value="true"/>
    <!-- Publish scans from best pose at a max of 10 Hz -->
    <param name="odom_model_type" value="diff"/>
    <param name="odom_alpha5" value="0.1"/>
    <param name="gui_publish_rate" value="10.0"/>
    <param name="laser_max_beams" value="60"/>
    <param name="laser_max_range" value="12.0"/>
    <param name="min_particles" value="500"/>
    <param name="max_particles" value="2000"/>
    <param name="kld_err" value="0.05"/>
    <param name="kld_z" value="0.99"/>
    <param name="odom_alpha1" value="0.2"/>
    <param name="odom_alpha2" value="0.2"/>
    <!-- translation std dev, m -->
    <param name="odom_alpha3" value="0.2"/>
    <param name="odom_alpha4" value="0.2"/>
    <param name="laser_z_hit" value="0.5"/>
    <param name="laser_z_short" value="0.05"/>
    <param name="laser_z_max" value="0.05"/>
    <param name="laser_z_rand" value="0.5"/>
    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>
    <param name="laser_model_type" value="likelihood_field"/>
    <!-- <param name="laser_model_type" value="beam"/> -->
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="update_min_d" value="0.25"/>
    <param name="update_min_a" value="0.2"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="resample_interval" value="1"/>
    <!-- Increase tolerance because the computer can get quite busy -->
    <param name="transform_tolerance" value="1.0"/>
    <param name="recovery_alpha_slow" value="0.0"/>
    <param name="recovery_alpha_fast" value="0.0"/>
    <param name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a" value="$(arg initial_pose_yaw)"/>
    <param name="initial_cov_xx" value="0.5"/>
    <param name="initial_cov_yy" value="0.5"/>
    <param name="initial_cov_aa" value="0.1"/>
  </node>

  <!-- Visualization -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_cfg)"/>

</launch>
